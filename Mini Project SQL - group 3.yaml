schemaVersion: 3
meta:
  sourceVersionId: dfad5d4f-8c78-45ad-ab47-e8b098ea032c # DO NOT CHANGE - Hex uses this to match up project versions when reimporting the file
  description: Project that uses SQL to calculate interesting insights about bike store dataset
  projectId: 1dcc2bd3-b32a-4331-9cfe-d9a8eac5fabd # DO NOT CHANGE - Unique ID of the project from which this file was generated
  title: Mini Project SQL - group 3
  timezone: null
  appTheme: SYS_PREF
  codeLanguage: PYTHON
  status: null
  categories: []
  castDecimalsDefault: true
  logicQueryCacheTimeout: null
  publishedQueryCacheTimeout: null
  hexType: PROJECT
  allowExecutionReordering: true
  prerunApp: false
  cachePublishedAppState: true
  refreshStalePublishedApp: false
  autoRerunApp: true
projectAssets:
  dataConnections:
    - dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1 # SQL_Mini_Project_Group3 (mysql)
  envVars: []
  secrets: []
sharedAssets:
  secrets: []
  vcsPackages: []
  dataConnections: []
  externalFileIntegrations: []
cells:
  - cellType: SQL
    cellId: 083c0d49-abd7-4fac-b707-85dfadaa300a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: List Databases
    config:
      source: |
        show databases; 
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Database
            renameTo: null
            size: 143
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 4e253f0f-c4f0-4b3e-8416-a14bf7a8e517 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Switch Database
    config:
      source: use bikestore;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_3
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 174374f5-bc1c-455f-97de-9c23f19674fe # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: List Tables
    config:
      source: show tables;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_4
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Tables_in_bikestore
            renameTo: null
            size: 160
            wrapText: null
            displayFormat: null
          - originalName: Tables_in_sql12732768
            renameTo: null
            size: 183
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 6635df84-1a5d-4347-b905-3c5d9b7f3b69 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Brands
    config:
      source: |
        select * from brands;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_5
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: brand_id
            renameTo: null
            size: 100
            wrapText: null
            displayFormat: null
          - originalName: brand_name
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: city
            renameTo: null
            size: 90
            wrapText: null
            displayFormat: null
          - originalName: email
            renameTo: null
            size: 153
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: state
            renameTo: null
            size: 79
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: store_name
            renameTo: null
            size: 122
            wrapText: null
            displayFormat: null
          - originalName: street
            renameTo: null
            size: 148
            wrapText: null
            displayFormat: null
          - originalName: zip_code
            renameTo: null
            size: 99
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 26e09131-da29-42fe-a930-13a26be006be # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Categories
    config:
      source: |
        select * from categories;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_6
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: category_id
            renameTo: null
            size: 114
            wrapText: null
            displayFormat: null
          - originalName: category_name
            renameTo: null
            size: 137
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 0b68485b-82af-4c44-a914-d5ec2f22b4d5 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Customers
    config:
      source: |
        select * from customers;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_7
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: city
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: email
            renameTo: null
            size: 202
            wrapText: null
            displayFormat: null
          - originalName: first_name
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: last_name
            renameTo: null
            size: 109
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: state
            renameTo: null
            size: 79
            wrapText: null
            displayFormat: null
          - originalName: street
            renameTo: null
            size: 167
            wrapText: null
            displayFormat: null
          - originalName: zip_code
            renameTo: null
            size: 99
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 1d55e34d-2c74-4fcd-85f5-39c2c00548c5 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Order Items
    config:
      source: select * from order_items;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_8
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: discount
            renameTo: null
            size: 98
            wrapText: null
            displayFormat: null
          - originalName: item_id
            renameTo: null
            size: 93
            wrapText: null
            displayFormat: null
          - originalName: list_price
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: order_id
            renameTo: null
            size: 97
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: quantity
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 323621b2-15dd-4102-a015-3a7e282f287f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Top 5 Orders
    config:
      source: |-
        SELECT *
        FROM orders
        LIMIT 5;
        -- shipped date - data cleaning required
        -- order status 1,2,3,4 identifies order shipping status (canceled/successful/pending/payment done)
        -- inner join by order id with order_items to get total quantity and total sales by year
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_9
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: order_date
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: order_id
            renameTo: null
            size: 97
            wrapText: null
            displayFormat: null
          - originalName: order_status
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: required_date
            renameTo: null
            size: 128
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: shipped_date
            renameTo: null
            size: 125
            wrapText: null
            displayFormat: null
          - originalName: staff_id
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 2787c019-5291-4d25-96ff-f60386c7fca8 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Product Selection
    config:
      source: |-
        select * from products;
        -- group by brand id
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_10
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: brand_id
            renameTo: null
            size: 100
            wrapText: null
            displayFormat: null
          - originalName: category_id
            renameTo: null
            size: 114
            wrapText: null
            displayFormat: null
          - originalName: list_price
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: model_year
            renameTo: null
            size: 116
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 254
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 79af523b-1c25-4423-a507-890222716f26 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Staffs
    config:
      source: |
        select * from staffs;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_11
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: active
            renameTo: null
            size: 84
            wrapText: null
            displayFormat: null
          - originalName: email
            renameTo: null
            size: 206
            wrapText: null
            displayFormat: null
          - originalName: first_name
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: last_name
            renameTo: null
            size: 109
            wrapText: null
            displayFormat: null
          - originalName: manager_id
            renameTo: null
            size: 115
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: staff_id
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 808d3eb6-7f5a-430a-82d8-3d34f931324d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Stocks
    config:
      source: |
        select * from stocks;
        -- group by store id each product id  and its quantity
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_12
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: quantity
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 9358884c-1f9b-4878-be40-0e0a9f40a056 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Retrieve Stores
    config:
      source: select * from stores;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_13
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: city
            renameTo: null
            size: 90
            wrapText: null
            displayFormat: null
          - originalName: email
            renameTo: null
            size: 153
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: state
            renameTo: null
            size: 79
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: store_name
            renameTo: null
            size: 122
            wrapText: null
            displayFormat: null
          - originalName: street
            renameTo: null
            size: 148
            wrapText: null
            displayFormat: null
          - originalName: zip_code
            renameTo: null
            size: 99
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: fa078169-0cae-41f4-ac92-131ec82e616a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Total Sales Revenue
    config:
      source: |-
        -- Calculate total sales revenue across all orders
        SELECT 
            SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_sales_revenue
        FROM 
            order_items oi;

        -- insight: total sales is 7.68 million across all products 
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_56
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_sales_revenue
            renameTo: null
            size: 161
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 7e692606-9c5f-46a1-a8a8-2bac4fbcc817 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "total sales is 7.68 million across all products "
  - cellType: SQL
    cellId: 288e19a8-0038-4b0f-b09e-76c7514b0495 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Average Order Value
    config:
      source: |-
        -- Calculate average order value
        SELECT 
            AVG(order_total) AS average_order_value
        FROM (
            SELECT 
                o.order_id,
                SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS order_total
            FROM 
                orders o
            JOIN 
                order_items oi ON o.order_id = oi.order_id
            GROUP BY 
                o.order_id
        ) sub;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_57
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: average_order_value
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 88a9e5e2-aed3-4169-943d-aee43a4f9c3b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: customers on average spend 4700 dollars
  - cellType: SQL
    cellId: 320988b3-9df3-49df-b1c3-75b084e07ac3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Count Transactions
    config:
      source: |-
        -- Count total number of transactions
        SELECT 
            COUNT(*) AS total_transactions
        FROM 
            orders;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_58
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_transactions
            renameTo: null
            size: 150
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 62f90625-9c87-4caa-9a5c-563de90f5f8c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: overall sales activity across all orders is 1615
  - cellType: SQL
    cellId: b392e949-9bad-47d4-a2b9-f6084453a5db # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Calculate Average Discount
    config:
      source: |-
        -- Calculate average discount offered
        SELECT
            AVG(oi.discount) AS average_discount
        FROM
            order_items oi;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_59
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: average_discount
            renameTo: null
            size: 146
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 2f742382-baed-4f91-8680-9bec9c1dfd76 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: on average a high discount of 10% is given to orders implying high discounts offered to promote sales
  - cellType: SQL
    cellId: 83e836bf-0b11-408b-9c81-674a16306332 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Unique Customer Count
    config:
      source: |-
        -- Count total number of unique customers
        SELECT
            COUNT(DISTINCT customer_id) AS total_customers
        FROM
            customers;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_60
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_customers
            renameTo: null
            size: 140
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 8994ebb8-8f42-4727-938b-cdbfe404e428 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: only 1445 unique customers, implying a tiny fraction of potential bicycle buyers purchasing at the store
  - cellType: SQL
    cellId: c99864de-7270-4841-9cd8-21b3f71bf1db # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Order Value Range
    config:
      source: |-
        -- Find minimum and maximum order values
        SELECT
            MIN(order_total) AS minimum_order_value,
            MAX(order_total) AS maximum_order_value
        FROM (
            SELECT 
                o.order_id,
                SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS order_total
            FROM 
                orders o
            JOIN 
                order_items oi ON o.order_id = oi.order_id
            GROUP BY 
                o.order_id
        ) sub;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_61
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: maximum_order_value
            renameTo: null
            size: 175
            wrapText: null
            displayFormat: null
          - originalName: minimum_order_value
            renameTo: null
            size: 172
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 457c2688-f004-41b7-9466-36aa199f7a6f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: customers buy items value anywhere from 100 dollars to 30000 dollars
  - cellType: SQL
    cellId: e80f506d-1516-45e3-91a0-069b39857b9e # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Staff Sales Summary
    config:
      source: |-
        -- Calculate total sales by staff member
        SELECT
            s.staff_id,
            CONCAT(s.first_name, ' ', s.last_name) AS staff_name,
            SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS staff_total_sales
        FROM
            orders o
        JOIN
            order_items oi ON o.order_id = oi.order_id
        JOIN
            staffs s ON o.staff_id = s.staff_id
        GROUP BY
            s.staff_id, staff_name
        ORDER BY
            staff_total_sales DESC;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_62
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: staff_id
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: staff_name
            renameTo: null
            size: 122
            wrapText: null
            displayFormat: null
          - originalName: staff_total_sales
            renameTo: null
            size: 141
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 815da57d-b628-455e-b169-8c7c8afc227d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Staff can be incentivized or evaluated for performance based on the total sales numbers
  - cellType: SQL
    cellId: 1a133729-1269-45fc-9186-f5d1f626124c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Invalid Phone Numbers
    config:
      source: |-
        -- Find phone numbers that do not match the standard format
        SELECT
            staff_id,
            first_name,
            last_name,
            phone
        FROM
            staffs
        WHERE
            phone IS NOT NULL
            AND phone NOT REGEXP '^[0-9]{3}-[0-9]{3}-[0-9]{4}$';
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_63
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: first_name
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: last_name
            renameTo: null
            size: 109
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: staff_id
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 4334196a-2e12-4df4-a00b-31f134145bc9 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: phone number data for staff is consistent in US format
  - cellType: SQL
    cellId: f4b5f660-755b-413e-a658-4fe253f6958e # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Duplicate Customers Detection
    config:
      source: |-
        -- Identify potential duplicate customers based on name and email
        SELECT
            first_name,
            last_name,
            email,
            COUNT(*) AS occurrence
        FROM
            customers
        GROUP BY
            first_name,
            last_name,
            email
        HAVING
            COUNT(*) > 1;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_64
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 24
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 27dd878a-867c-48d3-ab7e-0666433a592b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: there are no duplicate customers
  - cellType: SQL
    cellId: b1b5d17f-388a-4aa7-a234-32a972a97586 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Trim Customer Names
    config:
      source: |-
        -- Update 'first_name' and 'last_name' fields to remove extra spaces
        UPDATE
            customers
        SET
            first_name = TRIM(first_name),
            last_name = TRIM(last_name);
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_66
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: Updated rows
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: b4c43ab0-b985-4f44-a62a-c31fefb2f572 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Identify Low Stock
    config:
      source: |-
        -- Find products with zero or negative stock quantities
        SELECT
            store_id,
            product_id,
            quantity
        FROM
            stocks
        WHERE
            quantity <= 0;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_67
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: quantity
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: f7cc28fd-4689-413a-9de7-42c3cb801d98 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: If inventory is low, restock else if data entry error, identify and correct stock numbers
        - type: paragraph
          children:
            - text: there are no negative numbers in stock
  - cellType: SQL
    cellId: d5b13498-c519-4adb-8225-0409b170041f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Product and Brand List
    config:
      source: |
        -- List all products: Write a query to retrieve all product names and their corresponding brand names.
        SELECT p.product_name, b.brand_name
        FROM products as p
        join brands as b
        on p.brand_id = b.brand_id;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_14
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: brand_name
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 291
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: BLOCK
    cellId: 71c48ee5-c268-449f-9a43-b5dd426cef8f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: e4a7abd5-562c-4038-b5c5-ade7b21c7f36
        chartCellId: 19020eb2-e061-4c97-a03f-2055711b328d
        activeTab: display
      cells:
        - cellType: SQL
          cellId: e4a7abd5-562c-4038-b5c5-ade7b21c7f36
          cellLabel: Brand Product Counts
          config:
            source: |-
              SELECT
                  b.brand_name,
                  COUNT(p.product_id) AS product_count
              FROM
                  brands AS b
              JOIN
                  products AS p ON b.brand_id = p.brand_id
              GROUP BY
                  b.brand_id, b.brand_name
              ORDER BY
                  product_count DESC;

              -- Insight: 'Trek' and 'Electra' brands have the highest number of products 
              -- while Ritchey and Strider brands got least number of products, so may need to increase their offerings
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_42
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: brand_name
                  renameTo: null
                  size: 120
                  wrapText: null
                  displayFormat: null
                - originalName: product_count
                  renameTo: null
                  size: 131
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 39
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 19020eb2-e061-4c97-a03f-2055711b328d
          cellLabel: Brand Product Counts
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 0bbd6950-f6d8-43e0-8e56-64fc7b95c21c
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: brand_name
                  series:
                    - id: a7c12ef2-8a4d-47d4-a0a3-70c3c2243c93
                      type: bar
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - product_count
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      barWidth: 1
                      orientation: vertical
                      layout: stacked
                  dataFrame: dataframe_42
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 6ba73ddd-b267-44fe-a727-8c91d1c7fb4f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Insight: 'Trek' and 'Electra' brands have the highest number of products "
        - type: paragraph
          children:
            - text: " while Ritchey and Strider brands got least number of products, so may need to increase their offerings"
  - cellType: BLOCK
    cellId: b5e95f66-4089-4232-8875-64281c41de05 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 0bf02e36-087c-40fe-a705-c03056dba8d1
        chartCellId: f8f0f20c-a9cb-48c1-87eb-f2e24a7551e4
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 0bf02e36-087c-40fe-a705-c03056dba8d1
          cellLabel: Staff Distribution
          config:
            source: |-
              -- Find active staff: Write a query to find all active staff members and their store names.
              SELECT sta.first_name, sta.last_name, sta.active as staff_status, sto.store_name
              FROM staffs as sta
              JOIN stores as sto
                  ON sta.store_id = sto.store_id 
              WHERE sta.active = 1;

              -- Insight: 
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_15
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: first_name
                  renameTo: null
                  size: 110
                  wrapText: null
                  displayFormat: null
                - originalName: last_name
                  renameTo: null
                  size: 109
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 39
                  wrapText: null
                  displayFormat: null
                - originalName: staff_status
                  renameTo: null
                  size: 115
                  wrapText: null
                  displayFormat: null
                - originalName: store_name
                  renameTo: null
                  size: 122
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: f8f0f20c-a9cb-48c1-87eb-f2e24a7551e4
          cellLabel: Staff Distribution
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 34fadc8f-5130-4bc9-a97d-54a242a6a9b0
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: store_name
                  series:
                    - id: b5327411-a162-48b7-ab04-940253b236d2
                      type: pie
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: count
                      dataFrameColumns:
                        - _HEX_COUNT_STAR_ARG_
                      colorDataFrameColumn: store_name
                      colorOrder: ascending
                      color:
                        type: series
                        colorsBySeriesValues: {}
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      dataLabels:
                        position: inside-center
                      radius: 0
                      showAsPct: true
                  dataFrame: dataframe_15
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings:
              Kali: "#54A24B"
              Genna: "#E45756"
              Layla: "#EECA3B"
              Mireya: "#FF9DA6"
              Venita: "#9D755D"
              Virgie: "#BAB0AC"
              Fabiola: "#F58518"
              Jannette: "#72B7B2"
              Marcelene: "#B279A2"
              Bernardine: "#4C78A8"
              Baldwin Bikes: "#4C78A8"
              Rowlett Bikes: "#F58518"
              Santa Cruz Bikes: "#E45756"
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: SQL
    cellId: fe103151-245a-482b-b3d7-3ac9bbc3a525 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Store Sales Summary
    config:
      source: |-
        SELECT
            s.store_id,
            s.store_name,
            SUM(oi.quantity) AS total_units_sold,
            COUNT(DISTINCT(st.staff_id)) AS staff_count
        FROM
            stores AS s
        JOIN
            orders AS o ON s.store_id = o.store_id
        JOIN
            order_items AS oi ON o.order_id = oi.order_id
        JOIN staffs st on s.store_id = st.store_id
        GROUP BY
            s.store_id,
            s.store_name
        ORDER BY
            total_units_sold DESC;

            -- Baldwin Bikes has only 3 staff despite more units sold than 
            -- other stores, so they appear understaffed. For better resource
            -- allocation, we can increase staff count at baldwin
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_45
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: staff_count
            renameTo: null
            size: 112
            wrapText: null
            displayFormat: null
          - originalName: store_id
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: store_name
            renameTo: null
            size: 122
            wrapText: null
            displayFormat: null
          - originalName: total_units_sold
            renameTo: null
            size: 139
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: d6912407-8aaa-4a2c-8b9e-89146a489619 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "    Baldwin Bikes has only 3 staff despite more units sold than other stores, so they appear understaffed. "
        - type: paragraph
          children:
            - text: For better resource allocation, we can increase staff count at baldwin.
  - cellType: SQL
    cellId: 99e5196e-5f58-4af0-ab3d-d12afd11b45a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Count Null Phone Numbers
    config:
      source: |-
        SELECT 
           count(*)
        FROM 
            customers
        WHERE 
          phone = 'null';

        -- Insight so many null values for phone so use coalesce for phone wherever used.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_46
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: count(*)
            renameTo: null
            size: 96
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 24
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 8b0bd3cf-3c99-4a55-875b-88047c483c31 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Insight: so many null values for phone so use coalesce for phone wherever used."
  - cellType: SQL
    cellId: 946fb27d-f098-45b4-9ad1-49f83e0f8689 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Contact Info
    config:
      source: |-
        -- Customer details: Write a query to list all customers with their full names, email, and phone number.
        SELECT concat_ws(' ',first_name, last_name) as full_name, email, phone
        FROM customers;
        -- Insight: Only means of contacting customers for any offers/marketing purpose is through 
        -- email considering the null data (1267 of 1445 records) in phone. Recommendation is to capture phone details from customers.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_16
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: COALESCE(phone,'n/a')
            renameTo: null
            size: 177
            wrapText: null
            displayFormat: null
          - originalName: coalesce(phone,'n/a')
            renameTo: null
            size: 166
            wrapText: null
            displayFormat: null
          - originalName: concat_ws(' ',first_name, last_name)
            renameTo: null
            size: 249
            wrapText: null
            displayFormat: null
          - originalName: email
            renameTo: null
            size: 202
            wrapText: null
            displayFormat: null
          - originalName: first_name
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: full_name
            renameTo: null
            size: 133
            wrapText: null
            displayFormat: null
          - originalName: last_name
            renameTo: null
            size: 109
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: a3e1034b-16e8-448d-a5cb-67d6e54283b4 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Insight: Only means of contacting customers for any offers/marketing purpose is through email considering the null data (1267 of 1445 records) in phone. "
        - type: paragraph
          children:
            - text: Recommendation is to capture phone details from customers.
  - cellType: BLOCK
    cellId: 35f6fb9d-6310-46ab-a367-2ce60f1d801c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 843f94f9-f4e3-4889-8c78-7c4e43b3e9bd
        chartCellId: daba1018-a673-448b-8ab7-c6e870072ad1
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 843f94f9-f4e3-4889-8c78-7c4e43b3e9bd
          cellLabel: Product Count by Category
          config:
            source: |-
              -- Product categories: Write a query to count the number of products in each category.
              SELECT c.category_name as category_name, COUNT(1) as num_product
              FROM categories as c
              JOIN products as p
                  ON p.category_id = c.category_id 
              GROUP BY category_name;
              -- Insight : Cruisers Bicycles and Mountain Bikes to be added more into stock considering more sales in these categories 
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_17
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: category_name
                  renameTo: null
                  size: 137
                  wrapText: null
                  displayFormat: null
                - originalName: num_product
                  renameTo: null
                  size: 125
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 39
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: daba1018-a673-448b-8ab7-c6e870072ad1
          cellLabel: Product Count by Category
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 45d9f83b-610f-435b-9d7b-52246dee0969
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: category_name
                  series:
                    - id: 7fa305ef-f0bf-4b74-ad10-e5ba848d4bac
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - num_product
                      colorOrder: ascending
                      color:
                        type: static
                        dataType: number
                        aggregate: sum
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: solid
                  dataFrame: dataframe_17
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 8c9ade49-5f10-4085-8e24-f28e01279df2 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Cruisers Bicycles and Mountain Bikes to be added more into stock considering more sales in these categories "
  - cellType: SQL
    cellId: 9b7501ae-e4f6-449c-815f-53f6ba00d734 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Category Sales Summary
    config:
      source: |-
        SELECT
            c.category_name,
            coalesce(SUM(oi.quantity),0) AS total_quantity_sold
        FROM
            categories AS c
        JOIN products AS p ON p.category_id = c.category_id
        JOIN order_items AS oi ON oi.product_id = p.product_id
        GROUP BY
            c.category_name;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_47
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: category_name
            renameTo: null
            size: 137
            wrapText: null
            displayFormat: null
          - originalName: num_product
            renameTo: null
            size: 125
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_quantity_sold
            renameTo: null
            size: 155
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 36c99535-046b-48c9-91f1-a85680875676 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Cruiser bikes used for leisure riding are the most popular. Mountain bikes used for adventure cycling are also quite popular.
  - cellType: SQL
    cellId: d249db08-3da6-473d-b3af-15a5f5a3d2f1 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Order Count
    config:
      source: |
        -- Orders by customer: Write a query to list the total number of orders placed by each customer in descending order.
        SELECT  c.customer_id, concat_ws(' ',c.first_name,c.last_name) AS customer_name, COUNT(1) as num_orders
        FROM customers as c
        INNER JOIN orders as o
            ON o.customer_id = c.customer_id
        GROUP BY 1
        ORDER BY 3 DESC;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_18
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: customer_name
            renameTo: null
            size: 139
            wrapText: null
            displayFormat: null
          - originalName: num_orders
            renameTo: null
            size: 117
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 987650a8-18fe-4ef8-8378-68f1332a4c1d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: A small but decent number of customers purchase place than one order
  - cellType: SQL
    cellId: d202fa5e-fd5c-4f46-8c33-760a4f9471cb # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Order Count
    config:
      source: |
        -- Customer orders: Write a query to list all customers who have placed at least one order, including their full name and total number of orders.
        SELECT c.customer_id, concat_ws(' ',c.first_name,c.last_name) as full_name, COUNT(1) as num_order 
        FROM customers as c
        JOIN orders as o
            ON c.customer_id = o.customer_id 
        GROUP BY c.customer_id
        ORDER BY num_order DESC, c.customer_id;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_21
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: full_name
            renameTo: null
            size: 133
            wrapText: null
            displayFormat: null
          - originalName: num_order
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 123c1014-2336-4fd6-9b5d-b32f2eb8011b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Top 5 Customers
    config:
      source: |-
        -- Top customers: Write a query to find the top 5 customers who have spent the most money.
        SELECT 
            c.customer_id, 
            concat_ws(" ",first_name,last_name) as customer_name,
            SUM(SUM((oi.list_price * (1 - discount))*quantity)) OVER (PARTITION BY c.customer_id)  AS total_spending
        FROM
            customers c
        INNER JOIN
            orders o
            ON o.customer_id = c.customer_id
        INNER JOIN
            order_items oi
            ON oi.order_id = o.order_id 
        GROUP BY customer_id
        ORDER BY total_spending DESC
        LIMIT 5;
        -- insight: these are the biggest spenders who can be rewarded
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_25
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: customer_name
            renameTo: null
            size: 139
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_spending
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 0d59f6d5-10af-4ff7-9e82-afc02b688821 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: These are the biggest spenders who can be rewarded with discounts and offers.
  - cellType: BLOCK
    cellId: 235db391-ccfe-4d6a-ae44-3cbaa324374d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: beb11f80-f5f3-4667-8485-e78aac0aa997
        chartCellId: 67d50ac4-a97a-4534-b097-c8f3ac2ffcc5
        activeTab: display
      cells:
        - cellType: SQL
          cellId: beb11f80-f5f3-4667-8485-e78aac0aa997
          cellLabel: Product Sales Revenue
          config:
            source: |
              -- Total sales per product: Write a query to calculate the total sales amount for each product (considering quantity, list price, and discount).

              with total_revenue AS
                           (SELECT oi.order_id,  
                                   ot.store_id,
              					 product_name,
                                   s.store_name,
                                   ot.order_date, 
                                   oi.product_id,
                                   oi.quantity as unit_sold, 
                                   oi.list_price, 
                                   oi.discount, 
                                  ((oi.quantity * oi.list_price) * (1-oi.discount)) AS total_sale_product
                            FROM order_items as oi
                            JOIN products as p
              			  ON oi.product_id = p.product_id
                            LEFT JOIN orders as ot
                            ON oi.order_id = ot.order_id 
                            LEFT JOIN stores as s
                            ON ot.store_id = s.store_id) 
                      SELECT product_name, 
                             SUM(total_sale_product) as revenue,
                             SUM(unit_sold) AS total_sales_volume,
                             ROUND(SUM(total_sale_product) / SUM(unit_sold), 2) AS revenue_per_item_sold,
                             ROUND((SUM(total_sale_product) / ((SELECT SUM(total_sale_product) FROM total_revenue))*100),2) as percentage
                      FROM total_revenue
                      GROUP BY product_id
                      ORDER BY total_sales_volume DESC;

              -- Insight: Trek Slash 8 27.5 = 2016 has been the highest revenue generating model amongst others.
              -- Insight: revenue is a factor of total_sales_volume as well as revenue_per_item
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_19
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: percentage
                  renameTo: null
                  size: 113
                  wrapText: null
                  displayFormat: null
                - originalName: product_name
                  renameTo: null
                  size: 254
                  wrapText: null
                  displayFormat: null
                - originalName: revenue
                  renameTo: null
                  size: 107
                  wrapText: null
                  displayFormat: null
                - originalName: revenue_per_item_sold
                  renameTo: null
                  size: 252
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: total_sales_volume
                  renameTo: null
                  size: 216
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 67d50ac4-a97a-4534-b097-c8f3ac2ffcc5
          cellLabel: Product Sales Revenue
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 9bba9402-6bc8-4be8-86f8-34b24f90688c
                  xAxis:
                    type: number
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: percentage
                  series:
                    - id: 4aaaaf81-8dbe-4630-a132-5ea34fab626f
                      type: pie
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - revenue
                      colorDataFrameColumn: percentage
                      colorOrder: ascending
                      color:
                        type: series
                        colorsBySeriesValues: {}
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      radius: 0
                      showAsPct: false
                  dataFrame: dataframe_19
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 6ce994a4-324a-43ff-857d-a92f9a36f4ea # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Trek Slash 8 27.5 = 2016 has been the highest revenue generating model amongst others.  "
        - type: paragraph
          children:
            - text: Revenue is a factor of total_sales_volume as well as revenue_per_item
  - cellType: SQL
    cellId: abb9f940-7255-4316-8d97-feb50c362ac8 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Average Discount
    config:
      source: |-
        -- Calculate average discount by brand
        SELECT
            b.brand_name,
            AVG(oi.discount) AS average_discount
        FROM
            order_items oi
        JOIN
            products p ON oi.product_id = p.product_id
        JOIN
            brands b ON p.brand_id = b.brand_id
        GROUP BY
            b.brand_id, b.brand_name
        ORDER BY
            average_discount DESC;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_69
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: average_discount
            renameTo: null
            size: 146
            wrapText: null
            displayFormat: null
          - originalName: brand_name
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: b193a557-8611-4045-8e2d-343b95a6cc2d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Strider and Heller are giving highest discounts to drive higher sales. Pure cycles has lowest discount suggesting strong loyalty / bigger profit margin
  - cellType: SQL
    cellId: de559b7a-1fb7-48cd-a2b9-e312895f88bc # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      source: |-
        -- Find products with high stock but low sales
        WITH sales_data AS (
            SELECT
                oi.product_id,
                SUM(oi.quantity) AS total_quantity_sold
            FROM
                order_items oi
            GROUP BY
                oi.product_id
        ),
        stock_data AS (
            SELECT
                s.product_id,
                SUM(s.quantity) AS total_stock
            FROM
                stocks s
            GROUP BY
                s.product_id
        )
        SELECT
            p.product_id,
            p.product_name,
            b.brand_name,
            c.category_name,
            sd.total_quantity_sold,
            sk.total_stock
        FROM
            products p
        LEFT JOIN sales_data sd ON p.product_id = sd.product_id
        LEFT JOIN stock_data sk ON p.product_id = sk.product_id
        JOIN brands b ON p.brand_id = b.brand_id
        JOIN categories c ON p.category_id = c.category_id
        WHERE
            sd.total_quantity_sold IS NOT NULL
            AND sk.total_stock > sd.total_quantity_sold * 2
        ORDER BY
            sk.total_stock DESC;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_70
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: brand_name
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: category_name
            renameTo: null
            size: 156
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 144
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_quantity_sold
            renameTo: null
            size: 228
            wrapText: null
            displayFormat: null
          - originalName: total_stock
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 15d37be4-3993-4f39-a13a-bbdd46b2a01e # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "These items mat need promotional efforts to sell off or other ways to reduce inventory "
  - cellType: SQL
    cellId: f8af8ba2-fc0e-4d76-988c-d79482884b7a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Order Status Summary
    config:
      source: |-
        -- Check the total count of orders associated to each order status
        SELECT order_status,
            CASE 
                WHEN order_status = 1 THEN 'Pending'
                WHEN order_status = 2 THEN 'Processing'
                WHEN order_status = 3 THEN 'Rejected'
                WHEN order_status = 4 THEN 'Completed'
                ELSE 'No_Track'
            END AS OrderStatus_Description,
            COUNT(*) AS order_count
        FROM orders
        GROUP BY order_status;
        -- Insight: 3% rejections is area to improve for better customer experience.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_48
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: OrderStatus_Description
            renameTo: null
            size: 185
            wrapText: null
            displayFormat: null
          - originalName: order_count
            renameTo: null
            size: 116
            wrapText: null
            displayFormat: null
          - originalName: order_status
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 0733032e-437a-42fb-9e01-fd48a99dea72 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: 3% rejections in orders is an area to improve for better customer experience.
  - cellType: SQL
    cellId: 0a259c95-58b8-4ad2-b132-478444e8c69b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Spending Analysis
    config:
      source: |-
        WITH customer_stats AS (
            SELECT
                c.customer_id,
                concat_ws(" ",c.first_name,c.last_name) as customer_name,
                SUM(quantity * list_price * (1 - discount)) AS total_spending,
                COUNT(DISTINCT o.order_id) AS total_orders,
                to_days('2018-12-31') - to_days(MAX(order_date)) AS days_since_last_purchase
            FROM
                orders o
            INNER JOIN
                order_items oi
            ON
                o.order_id = oi.order_id
            JOIN 
                customers as c
            ON 
                c.customer_id = o.customer_id
            GROUP BY
                1
        ),
        buying_analysis AS (
        SELECT
            customer_id,
            customer_name,
            CASE WHEN total_orders > 1 THEN 'repeat buyer'
                 ELSE 'one-time buyer'
                 END AS purchase_frequency,
            CASE WHEN days_since_last_purchase < 360 THEN 'recent buyer'
                 ELSE 'not recent buyer'
                 END AS purchase_recency,
            CASE WHEN total_spending/(SELECT MAX(total_spending) FROM customer_stats) >= .65 THEN 'big spender'
                 WHEN total_spending/(SELECT MAX(total_spending) FROM customer_stats) <= .30 THEN 'low spender'
                 ELSE 'average spender' 
                 END AS buying_power
        FROM
            customer_stats
        )

        SELECT buying_power, COUNT(*) as no_of_customers
        FROM
            buying_analysis
        GROUP BY
            buying_power;

        --Insight: Any customer who has spent more than 65% of top spending customers are grouped as big spenders. 
        -- There are 17 customers grouped as big spenders considering the purchase pattern 
        -- so need all the required contact details for any new release of premium products
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_33
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: COUNT(*)
            renameTo: null
            size: 105
            wrapText: null
            displayFormat: null
          - originalName: buying_power
            renameTo: null
            size: 129
            wrapText: null
            displayFormat: null
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: customer_name
            renameTo: null
            size: 139
            wrapText: null
            displayFormat: null
          - originalName: month
            renameTo: null
            size: 88
            wrapText: null
            displayFormat: null
          - originalName: no_of_customers
            renameTo: null
            size: 143
            wrapText: null
            displayFormat: null
          - originalName: prev_sales_amount
            renameTo: null
            size: 157
            wrapText: null
            displayFormat: null
          - originalName: purchase_frequency
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: purchase_recency
            renameTo: null
            size: 150
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: sales_amount
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: sales_growth_percent
            renameTo: null
            size: 173
            wrapText: null
            displayFormat: null
          - originalName: year
            renameTo: null
            size: 75
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: bfdd751c-789f-4fd9-9541-738f13673e24 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Any customer who has spent more than 65% of top spending customers are grouped as big spenders.  "
        - type: paragraph
          children:
            - text: "There are 17 customers grouped as big spenders considering the purchase pattern, "
        - type: paragraph
          children:
            - text: so need all the required contact details for any new release of premium products
  - cellType: SQL
    cellId: b6f0429e-68ac-4dfa-bf92-38c98e00f661 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Purchase Analysis
    config:
      source: |-
        WITH customer_stats AS (
            SELECT
                c.customer_id,
                c.phone,
                concat_ws(" ",c.first_name,c.last_name) as customer_name,
                SUM(quantity * list_price * (1 - discount)) AS total_spending,
                COUNT(DISTINCT o.order_id) AS total_orders,
                to_days('2018-12-31') - to_days(MAX(order_date)) AS days_since_last_purchase
            FROM
                orders o
            INNER JOIN
                order_items oi
            ON
                o.order_id = oi.order_id
            JOIN 
                customers as c
            ON 
                c.customer_id = o.customer_id
            GROUP BY
                1
        ),
        buying_analysis AS (
        SELECT
            customer_id,
            customer_name,
            phone,
            total_spending,
            CASE WHEN total_orders > 1 THEN 'repeat buyer'
                 ELSE 'one-time buyer'
                 END AS purchase_frequency,
            CASE WHEN days_since_last_purchase < 360 THEN 'recent buyer'
                 ELSE 'not recent buyer'
                 END AS purchase_recency,
            CASE WHEN total_spending/(SELECT MAX(total_spending) FROM customer_stats) >= .65 THEN 'big spender'
                 WHEN total_spending/(SELECT MAX(total_spending) FROM customer_stats) <= .30 THEN 'low spender'
                 ELSE 'average spender' 
                 END AS buying_power
        FROM
            customer_stats
        )
        SELECT * 
        FROM buying_analysis
        WHERE buying_power IN ("big spender","average spender")
        ORDER BY
            total_spending DESC;
        -- Insight: Identifed Abram Copeland, who has not visited store/s last 1 year 
        -- but is a big spender so can be reached out for new sale opportunities.

        -- For the null values with respect to Phone number details, 
        -- Bike store can launch an email campaign to capture the corresponding phone numbers
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_49
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: buying_power
            renameTo: null
            size: 129
            wrapText: null
            displayFormat: null
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: customer_name
            renameTo: null
            size: 139
            wrapText: null
            displayFormat: null
          - originalName: phone
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: purchase_frequency
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: purchase_recency
            renameTo: null
            size: 150
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_spending
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: f4820416-32e4-400a-b424-61687cbf7000 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: |-
                Identified Abram Copeland, who has not visited store/s last 1 year but is a big spender so can be reached out for new sale opportunities.
                For the null values with respect to Phone number details, Bike store can launch an email campaign to capture the corresponding phone numbers
  - cellType: BLOCK
    cellId: c3af8306-5068-4141-9e60-fb950b1a3b79 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 11b943b3-131e-4589-8b17-7df330137c1a
        chartCellId: 4c9e1048-f83d-45a9-981e-e68053069fb6
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 11b943b3-131e-4589-8b17-7df330137c1a
          cellLabel: Product Stock Summary
          config:
            source: |
              -- Stock availability: Write a query to find the total quantity of each product available in all stores.
              SELECT 
                  s.product_id, 
                  p.product_name, 
                  SUM(s.quantity) as total_q_in_all_stores
              FROM stocks as s
                  INNER JOIN products as p
                  ON p.product_id = s.product_id
              GROUP BY s.product_id order by total_q_in_all_stores asc;

              -- Insight : Stocks which are lesser than 10 to be replenished for quicker fulfilment. 
              -- In this case Trek Domane SLR Frameset - 2018 and Electra Cruiser 1 Ladies - 2018 products to be reviewed on sales pattern. 
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_22
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: product_id
                  renameTo: null
                  size: 111
                  wrapText: null
                  displayFormat: null
                - originalName: product_name
                  renameTo: null
                  size: 254
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: total_q_in_all_stores
                  renameTo: null
                  size: 166
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 4c9e1048-f83d-45a9-981e-e68053069fb6
          cellLabel: Product Stock Summary
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 820eda27-7bd1-4ef7-90f1-67e38fb4fec6
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: product_name
                  series:
                    - id: 886d70ce-5a46-42a0-a48c-721febd95014
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - total_q_in_all_stores
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: solid
                  dataFrame: dataframe_22
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: a3670d2b-631e-4efd-8a03-72aab764e108 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "Stocks which are lesser than 10 to be replenished for quicker fulfilment.  In this case Trek Domane SLR Frameset - 2018 and Electra Cruiser 1 Ladies - 2018 products to be reviewed on sales pattern. "
  - cellType: SQL
    cellId: 29ef316b-aa02-49a5-9903-dd3e438cf969 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Low Stock Products
    config:
      source: |-
        WITH max_order_date AS (
            SELECT MAX(order_date) AS max_date FROM orders
        ),

        total_stock AS (
            SELECT
                s.product_id,
                p.product_name,
                SUM(s.quantity) AS total_stock
            FROM stocks AS s
            INNER JOIN products AS p ON s.product_id = p.product_id
            GROUP BY s.product_id
        ),

        sales_trend AS (
            SELECT
                oi.product_id,
                SUM(oi.quantity) AS units_sold_recently
            FROM order_items AS oi
            INNER JOIN orders AS o ON oi.order_id = o.order_id
            CROSS JOIN max_order_date AS m
            WHERE o.order_date >= DATE_SUB('2018-12-01', INTERVAL 3 MONTH)
            GROUP BY oi.product_id
        )

        SELECT
            ts.product_id,
            ts.product_name,
            ts.total_stock,
            COALESCE(st.units_sold_recently, 0) AS units_sold_recently
        FROM total_stock AS ts
        LEFT JOIN sales_trend AS st ON ts.product_id = st.product_id
        WHERE ts.total_stock < 20 AND st.units_sold_recently > 0
        ORDER BY ts.total_stock ASC;
        -- Insight : "Electra Superbolt 1 20"" - 2018" and Electra Townie Commute 8D Ladies' - 2018 stocks to be replenished 
        -- considering the low total stock in inventory for these items
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_50
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 259
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 24
            wrapText: null
            displayFormat: null
          - originalName: total_stock
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
          - originalName: units_sold_recently
            renameTo: null
            size: 158
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: a8e1767a-b453-4310-9323-a455dfede2fe # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: "\"Electra Superbolt 1 20\"\" - 2018\" and Electra Townie Commute 8D Ladies' - 2018 stocks to be replenished -- considering the low total stock in inventory for these items"
  - cellType: BLOCK
    cellId: 4bdfe294-0be6-43fa-afb2-f08554b18fbd # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 6b1c47ca-1503-4703-8fd6-e033ba5d6b0e
        chartCellId: f6e07d39-9baf-4b74-beaa-0fa961dd1fc6
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 6b1c47ca-1503-4703-8fd6-e033ba5d6b0e
          cellLabel: Store Revenue Calculation
          config:
            source: |
              -- Revenue by store: Write a query to calculate the total revenue generated by each store.
              with total_revenue AS
                           (SELECT oi.order_id,  
                                   ot.store_id,
                                   s.store_name,
                                   s.state,
                                   ot.order_date, 
                                   oi.product_id,
                                   oi.quantity, 
                                   oi.list_price, 
                                   oi.discount, 
                                  ((oi.quantity * oi.list_price) * (1-oi.discount)) AS total_sale_product
                            FROM order_items as oi
                            LEFT JOIN orders as ot
                            ON oi.order_id = ot.order_id 
                            LEFT JOIN stores as s
                            ON ot.store_id = s.store_id) 
                            
                            
                      SELECT store_id,
                             store_name,
                             state,
                             SUM(total_sale_product) as revenue,
                             ROUND((SUM(total_sale_product) / ((SELECT SUM(total_sale_product) FROM total_revenue))*100),2) as percentage
                      FROM total_revenue
                      GROUP BY store_id
                      ORDER BY revenue DESC;

              -- Insight: Baldwin Bikes of Newyork has been the highest revenue generator amongst all the stores. 
              -- Need to review why the sale in Rowlett bikes way too low compared to other stores. Can review the staff marketting skills.
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_23
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: percentage
                  renameTo: null
                  size: 113
                  wrapText: null
                  displayFormat: null
                - originalName: revenue
                  renameTo: null
                  size: 158
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 39
                  wrapText: null
                  displayFormat: null
                - originalName: state
                  renameTo: null
                  size: 79
                  wrapText: null
                  displayFormat: null
                - originalName: store_id
                  renameTo: null
                  size: 96
                  wrapText: null
                  displayFormat: null
                - originalName: store_name
                  renameTo: null
                  size: 122
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: f6e07d39-9baf-4b74-beaa-0fa961dd1fc6
          cellLabel: Store Revenue Calculation
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: e48b5457-f602-4f0f-92e8-1d59e5e53813
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: store_name
                  series:
                    - id: c6709cc1-a552-458b-84fd-c7244fa3e078
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - revenue
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: solid
                  dataFrame: dataframe_23
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: a8caa8ac-dd13-406b-b1f8-6ac8f6579429 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Baldwin Bikes of Newyork has been the highest revenue generator amongst all the stores. -- Need to review why the sale in Rowlett bikes way too low compared to other stores. Can review the staff marketting skills.
  - cellType: SQL
    cellId: d97e3623-9a90-4e11-8c3e-808002a028f0 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Monthly Sales Summary
    config:
      source: |+
        -- Monthly sales analysis: Write a query to calculate the total sales amount for each month.
        SELECT
            YEAR(o.order_date)as year_value,
            MONTHNAME(o.order_date) as month_name,
            SUM(oi.quantity) as unit_sold,
            SUM(quantity * list_price * (1 - discount)) AS total_spending
        FROM orders o
            INNER JOIN
            order_items oi
                ON o.order_id = oi.order_id
        GROUP BY year_value,month_name;

      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_24
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: month_name
            renameTo: null
            size: 124
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_spending
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
          - originalName: unit_sold
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: year_value
            renameTo: null
            size: 109
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 5e0cd7e4-67e0-44e8-8c81-5e4a08bdaa12 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: August to October 2016 sees a peak -- strong performance in late summer and early fall
        - type: paragraph
          children:
            - text: January to April 2016 have lower values
        - type: paragraph
          children:
            - text: March and June 2017 see a spike compared to same months in 2016
        - type: paragraph
          children:
            - text: November and December 2017 show a dip in metrics
        - type: paragraph
          children:
            - text: January 2018 is off to a strong start
        - type: paragraph
          children:
            - text: "April 2018 sales is the highest at "
        - type: paragraph
          children:
            - text: Post April which shows a dramatic increase in sales, the total sales have completely plummeted from june until year end with only 4 items sold in December
        - type: paragraph
          children:
            - text: ""
  - cellType: BLOCK
    cellId: cc8cc53f-6486-4dc6-ae7e-7a6a4f1a5be4 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 0157228b-fa5f-4585-9007-f3176d5458c2
        chartCellId: c5d87b7a-43c0-4f63-aeb7-13228c06d201
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 0157228b-fa5f-4585-9007-f3176d5458c2
          cellLabel: Monthly Sales Growth
          config:
            source: |-
              WITH sales_data AS (
                  SELECT
                      year(o.order_date) as year,
                      month(o.order_date) as month,
                      SUM(oi.quantity * oi.list_price * (1 - oi.discount)) as sales_amount,
                      LAG(SUM(oi.quantity * oi.list_price * (1 - oi.discount)), 1) OVER (ORDER BY month(o.order_date)) AS prev_sales_amount
                  FROM
                      orders o
                  JOIN 
                      order_items oi ON o.order_id = oi.order_id
                  WHERE year(o.order_date) = 2016
                  
                  GROUP BY
                      year,month
              )

              SELECT
                  month,
                  year,
                  sales_amount,
                  prev_sales_amount,
                  CASE
                      WHEN prev_sales_amount IS NULL THEN 0  -- Handle the first month case
                      ELSE (1.0 * (sales_amount - prev_sales_amount) / prev_sales_amount) * 100.0
                  END AS sales_growth_percent
              FROM
                  sales_data
              GROUP BY year,month
              ORDER BY
                  month;

              /*
              Insight: 
              We can see some similarities from the result:

              April and July should be when downfall of sales happened
              Around May and June AND August and September, the sales would rise again. This rise can either become the peak sales of the year.
              */
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_35
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: month
                  renameTo: null
                  size: 88
                  wrapText: null
                  displayFormat: null
                - originalName: prev_sales_amount
                  renameTo: null
                  size: 157
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: sales_amount
                  renameTo: null
                  size: 127
                  wrapText: null
                  displayFormat: null
                - originalName: sales_growth_percent
                  renameTo: null
                  size: 173
                  wrapText: null
                  displayFormat: null
                - originalName: year
                  renameTo: null
                  size: 75
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: c5d87b7a-43c0-4f63-aeb7-13228c06d201
          cellLabel: Monthly Sales Growth
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: daedce8a-7f9c-49e3-91dd-f106aa02c78a
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                  series:
                    - id: 26fae845-988a-4fbd-847e-66ee043c4c1e
                      type: bar
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - month
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      barWidth: 1
                      orientation: vertical
                      layout: stacked
                  dataFrame: dataframe_35
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 4d7e3e6e-9373-4f02-ac0d-937aa0094fd6 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: |-
                We can see some similarities from the result:
                April and July should be when downfall of sales happened. Around May and June AND August and September, the sales would rise again. This rise can either become the peak sales of the year.
  - cellType: BLOCK
    cellId: 06c25874-7624-46d3-8cf5-77885ef8dda3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: dfbf9136-a11a-4ad3-a6f1-464506deea6c
        chartCellId: 8fd47086-cdcd-4fcd-ae89-db1f4028c1e3
        activeTab: display
      cells:
        - cellType: SQL
          cellId: dfbf9136-a11a-4ad3-a6f1-464506deea6c
          cellLabel: Monthly Sales Growth
          config:
            source: |-
              WITH sales_data AS (
                  SELECT
                      year(o.order_date) as year,
                      month(o.order_date) as month,
                      SUM(oi.quantity * oi.list_price * (1 - oi.discount)) as sales_amount,
                      LAG(SUM(oi.quantity * oi.list_price * (1 - oi.discount)), 1) OVER (ORDER BY month(o.order_date)) AS prev_sales_amount
                  FROM
                      orders o
                  JOIN 
                      order_items oi ON o.order_id = oi.order_id
                  WHERE year(o.order_date) = 2017
                  
                  GROUP BY
                      year,month
              )

              SELECT
                  month,
                  year,
                  sales_amount,
                  prev_sales_amount,
                  CASE
                      WHEN prev_sales_amount IS NULL THEN 0  -- Handle the first month case
                      ELSE (1.0 * (sales_amount - prev_sales_amount) / prev_sales_amount) * 100.0
                  END AS sales_growth_percent
              FROM
                  sales_data
              GROUP BY year,month
              ORDER BY
                  month;

              /*
              Insight: 
              We can see some similarities from the result:

              April and July should be when downfall of sales happened
              Around May and June AND August and September, the sales would rise again. This rise can either become the peak sales of the year.
              */
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_36
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: month
                  renameTo: null
                  size: 88
                  wrapText: null
                  displayFormat: null
                - originalName: prev_sales_amount
                  renameTo: null
                  size: 157
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: sales_amount
                  renameTo: null
                  size: 127
                  wrapText: null
                  displayFormat: null
                - originalName: sales_growth_percent
                  renameTo: null
                  size: 173
                  wrapText: null
                  displayFormat: null
                - originalName: year
                  renameTo: null
                  size: 75
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 8fd47086-cdcd-4fcd-ae89-db1f4028c1e3
          cellLabel: Monthly Sales Growth
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 200ac7c5-b962-41c9-bb29-9035a8f60619
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                  series:
                    - id: 633da5be-4bac-478c-81d8-2f1e2c317901
                      type: bar
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - month
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      barWidth: 1
                      orientation: vertical
                      layout: stacked
                  dataFrame: dataframe_36
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: SQL
    cellId: 3d799aad-42b9-4f55-a74b-393509a6c5ca # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Manager Staff Count
    config:
      source: |-
        -- Employee hierarchy: Write a query to list all staff members along with their managers' names.
        SELECT
            m.staff_id AS manager_id,
            CONCAT_WS(' ', m.first_name, m.last_name) AS manager_name,
            COUNT(s.staff_id) AS num_staff_managed
        FROM
            staffs AS m
        LEFT JOIN
            staffs AS s ON s.manager_id = m.staff_id AND s.staff_id != m.staff_id
        GROUP BY
            m.staff_id, m.first_name, m.last_name
        ORDER BY
            num_staff_managed DESC;
        -- Insight : May not need so many managers considering just 2 to 3 staff averaging under each manager.
        -- Fabiola is self managed - doesnt have a manager
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_26
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: manager_id
            renameTo: null
            size: 115
            wrapText: null
            displayFormat: null
          - originalName: manager_name
            renameTo: null
            size: 135
            wrapText: null
            displayFormat: null
          - originalName: num_staff_managed
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: staff_count
            renameTo: null
            size: 112
            wrapText: null
            displayFormat: null
          - originalName: staff_id
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: staff_name
            renameTo: null
            size: 140
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 152e58e0-f790-45d8-86e9-3de73219a3f9 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: May not need so many managers considering just 2 to 3 staff averaging under each manager.-- Fabiola is self managed - doesnt have a manager
  - cellType: SQL
    cellId: 7c40c856-f6e8-48ad-9cae-651d92084d88 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Top Products 2018
    config:
      source: |-
        -- Product performance: Write a query to determine which products have the highest sales volume in the year 2018.
        SELECT
            oi.product_id,
            product_name,
            year(o.order_date) AS order_year,
            sum(oi.quantity) AS total_unit_sold
        FROM
            order_items AS oi
        INNER JOIN products AS p
            ON oi.product_id = p.product_id
        INNER JOIN orders AS o
            ON oi.order_id = o.order_id
        WHERE year(o.order_date) = 2018
        GROUP BY oi.product_id, p.product_name, order_year
        order by total_unit_sold desc;

        -- Insight: Older models like Trek Girl's Kickster - 2017 continue to be in demand in following/newer year, 
        -- so can be restocked.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_27
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: order_year
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 275
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_unit_sold
            renameTo: null
            size: 133
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: c43f8f29-74f2-4d5b-8c85-084824023aa6 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Older models like Trek Girl's Kickster - 2017 continue to be in demand in following year 2018, -- so can be restocked.
  - cellType: SQL
    cellId: 59532e69-aa64-4303-bbe4-7b9ecb69be8b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Customer Sales Analysis
    config:
      source: |-
        -- Customer location analysis: Write a query to aggregate the total sales, average order value, and maximum order value for customers in each city and state.
        SELECT 
            c.city, 
            c.state, 
            COUNT(c.customer_id) AS customer_count,
            SUM(quantity * oi.list_price * (1 - oi.discount)) AS total_sales,
            AVG(quantity * oi.list_price * (1 - oi.discount)) AS average_order_value,
            MAX(quantity * oi.list_price * (1 - oi.discount)) AS max_order_value
        FROM 
            customers c
        JOIN 
            orders o 
            ON c.customer_id = o.customer_id
        JOIN
            order_items oi 
            ON o.order_id = oi.order_id
        GROUP BY city,state
        ORDER BY total_sales DESC;

        -- Insight : Noticed Mount Vernon of NY has larger customer based and higher sales compared to other cities. 
        -- May be the city can be assessed to open a store or service centre there.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_28
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: total_sales
        defaultSortIndexColumn: null
        defaultSortDirection: DESC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: average_order_value
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: city
            renameTo: null
            size: 117
            wrapText: null
            displayFormat: null
          - originalName: customer_count
            renameTo: null
            size: 138
            wrapText: null
            displayFormat: null
          - originalName: max_order_value
            renameTo: null
            size: 144
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: state
            renameTo: null
            size: 79
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: a0922fa4-0980-4c27-889e-19de4af7e3a7 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Noticed Mount Vernon of NY has larger customer based and higher sales compared to other cities. -- May be the city can be assessed to open a store or service centre there.
  - cellType: SQL
    cellId: 93dd51f1-988c-4c1e-a605-523e1a868081 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: 7-Day Sales Average
    config:
      source: |-
        -- Calculate 7-day moving average of daily sales
        WITH daily_sales AS (
            SELECT
                o.order_date,
                SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_sales
            FROM
                orders o
            JOIN
                order_items oi ON o.order_id = oi.order_id
            GROUP BY
                o.order_date
        )
        SELECT
            order_date,
            total_sales,
            AVG(total_sales) OVER (
                ORDER BY order_date
                ROWS BETWEEN 6 PRECEDING AND CURRENT ROW
            ) AS moving_average_sales
        FROM
            daily_sales
        ORDER BY
            order_date;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_71
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: moving_average_sales
            renameTo: null
            size: 174
            wrapText: null
            displayFormat: null
          - originalName: order_date
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: SQL
    cellId: 0992d9a1-4056-4bbc-8224-0a4455702714 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Sales Prediction
    config:
      source: |-
        -- Predict future sales using LEAD()
        WITH product_sales AS (
            SELECT
                p.product_id,
                p.product_name,
                o.order_date,
                SUM(oi.quantity) AS units_sold
            FROM
                products p
            JOIN
                order_items oi ON p.product_id = oi.product_id
            JOIN
                orders o ON oi.order_id = o.order_id
            GROUP BY
                p.product_id, p.product_name, o.order_date
        )
        SELECT
            product_id,
            product_name,
            order_date,
            units_sold,
            LEAD(units_sold, 1) OVER (PARTITION BY product_id ORDER BY order_date) AS next_day_sales
        FROM
            product_sales
        ORDER BY
            product_id, order_date;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_72
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: next_day_sales
            renameTo: null
            size: 134
            wrapText: null
            displayFormat: null
          - originalName: order_date
            renameTo: null
            size: 110
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 229
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: units_sold
            renameTo: null
            size: 107
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: a0014070-d655-4456-971d-04848ced7bbb # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Using this table we can plan inventory restocking
  - cellType: SQL
    cellId: 2387986e-315a-4ee0-8363-e1d0576ffea9 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Average Shipping Delay
    config:
      source: |-
        -- Order fulfillment: Write a query to find the average number of days taken to ship orders after the required date.
        SELECT 
            avg(datediff(shipped_date,required_date)) avg_delay
        FROM orders;

        -- Insight : Delay seem to be in control but still can be review the action required to completely avoid delays.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_29
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: avg_delay
            renameTo: null
            size: 106
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: fa5c76fc-35f7-43f2-8736-8c89e33e04c3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Delay seem to be in control but still can be review the action required to completely avoid delays.
  - cellType: SQL
    cellId: 85948959-5f65-41bd-ba79-977b61047c07 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Delayed Orders Analysis
    config:
      source: |-
        WITH delayed_order as(
        SELECT order_id,st.store_name, DATEDIFF(shipped_date, required_date) AS avg_delay
        FROM bikestore.orders as o
        JOIN bikestore.stores as st
        ON st.store_id = o.store_id
        WHERE DATEDIFF(shipped_date, required_date) > 0
        ORDER BY avg_delay DESC
        )
        SELECT store_name , 
        avg_delay,
        COUNT(*) as no_of_orders
        FROM delayed_order
        GROUP BY store_name, avg_delay
        ORDER BY avg_delay DESC, no_of_orders DESC;
        -- Insight: Baldwin Bikes store seem to have 112 orders delayed by 2 days and 205 orders by a day ,
        -- So need to optimize the supply chain process for better customer experience.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_51
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: COUNT(*)
            renameTo: null
            size: 105
            wrapText: null
            displayFormat: null
          - originalName: avg_delay
            renameTo: null
            size: 106
            wrapText: null
            displayFormat: null
          - originalName: no_of_orders
            renameTo: null
            size: 121
            wrapText: null
            displayFormat: null
          - originalName: order_id
            renameTo: null
            size: 97
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: store_name
            renameTo: null
            size: 122
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 0d3ce302-e43d-4b29-be17-2fb965e231f8 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Baldwin Bikes store seem to have 112 orders delayed by 2 days and 205 orders by a day ,-- So need to optimize the supply chain process for better customer experience.
  - cellType: BLOCK
    cellId: afb2d945-53e6-4518-b9f6-d21ceb8c34a3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 75b45381-41b1-43ca-99bb-a7045b6031a9
        chartCellId: 1998c146-6fc7-4ad4-971d-18e055b6ce37
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 75b45381-41b1-43ca-99bb-a7045b6031a9
          cellLabel: Customer Order Analysis
          config:
            source: |-
              -- Customer order patterns: Write a query to identify customers who placed orders in each month for the last six months of 2018.
              /* Insight: 
              If we look at the previous monthly sales analysis , we may identify a problem of customer order patterns after June 2018. Therefore, we need to investigate this issue.

              First, we want to write a query to identify customers who placed orders in each month for the last six months of 2018.
              */
              SELECT
                  year(o.order_date) as year,
                  month(o.order_date) as month,
                  c.first_name, c.last_name
              FROM customers c
              JOIN orders o
                  ON o.customer_id = c.customer_id
              WHERE 
                  year(o.order_date) = 2018 AND
                  month(o.order_date) >= 6
              ORDER BY 2 ASC, 3 ASC;

              -- Insight: The number of orders have drastically declined, so need to reach out to older customers for marketting purpose.
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_30
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: customer_id
                  renameTo: null
                  size: 119
                  wrapText: null
                  displayFormat: null
                - originalName: first_name
                  renameTo: null
                  size: 110
                  wrapText: null
                  displayFormat: null
                - originalName: last_name
                  renameTo: null
                  size: 109
                  wrapText: null
                  displayFormat: null
                - originalName: month
                  renameTo: null
                  size: 87
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: year
                  renameTo: null
                  size: 75
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 1998c146-6fc7-4ad4-971d-18e055b6ce37
          cellLabel: Customer Order Analysis
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: 0cd6de8f-ca39-438a-97a3-3c9cc77e913d
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                  series:
                    - id: 03949eab-afcd-4292-9eec-1660e0804f6b
                      type: bar
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - year
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      barWidth: 1
                      orientation: vertical
                      layout: stacked
                  dataFrame: dataframe_30
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 813891c0-37fa-400c-9c1f-91a751349f3b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: |-
                If we look at the previous monthly sales analysis , we may identify a problem of customer order patterns after June 2018. Therefore, we need to investigate this issue.
                First, we want to write a query to identify customers who placed orders in each month for the last six months of 2018.
  - cellType: SQL
    cellId: a94e6b08-98cd-4824-8958-d5d1f6b22353 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Sales Summary
    config:
      source: |-
        /*
        Insight:
        From the query above, we can say the data after May 2018 is messed up.
        We just then use the data from 2016 andd 2017 to make the calculations.
        */
        SELECT
            year(order_date) as year,
            monthname(order_date) as month,
            SUM(quantity) as unit_sold,
            SUM(quantity * oi.list_price * (1 - oi.discount)) AS total_sales
        FROM orders o
            INNER JOIN
            order_items oi
                ON o.order_id = oi.order_id
        GROUP BY 1,2;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_34
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: month
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: unit_sold
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: year
            renameTo: null
            size: 75
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: c2ac8452-96d8-44a9-abd0-fc98c94c2fc3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: From the query above, we can say the data after May 2018 is messed up. We just then use the data from 2016 andd 2017 to make the calculations.
  - cellType: SQL
    cellId: 0e3b8a71-5d12-4d4f-b579-6c480621dc3b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Product Sales Quartiles
    config:
      source: |-
        -- Segment products into quartiles based on total sales
        WITH product_sales AS (
            SELECT
                p.product_id,
                p.product_name,
                SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_sales
            FROM
                products p
            JOIN
                order_items oi ON p.product_id = oi.product_id
            GROUP BY
                p.product_id, p.product_name
        )
        SELECT
            product_id,
            product_name,
            total_sales,
            NTILE(4) OVER (ORDER BY total_sales DESC) AS sales_quartile
        FROM
            product_sales
        ORDER BY
            sales_quartile, total_sales DESC;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_73
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 254
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: sales_quartile
            renameTo: null
            size: 127
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: aafd9561-c5e5-4909-b57b-9ce8725a4c39 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: products in quartile 1 have highest sales and need more inventory
        - type: paragraph
          children:
            - text: products in quartile 4 have lower sales and may need promotions.
  - cellType: SQL
    cellId: 64ab591e-ee98-4b7e-8fee-eb7f60c8fb10 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Product Profitability Analysis
    config:
      source: |+
        /*
        Questions:
        Which products is the most profitable?
        Which products should be kept available because they are profitable?
        Which products should be kept available because they are popular?
        */

        SELECT
            oi.product_id,
            product_name,
            oi.list_price,
            SUM(oi.quantity) AS total_quantity,
            SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_sales
        FROM
            bikestore.order_items AS oi
        INNER JOIN bikestore.products AS p
            ON oi.product_id = p.product_id
        GROUP BY oi.product_id, product_name, oi.list_price
        ORDER BY total_quantity DESC, total_sales DESC;

        -- insight: need to balance inventory of high volume selling items like
        -- Surly Ice Cream Truck Frameset - 2016 and Electra Cruiser 1 (24-Inch) - 2016
        -- and high profit (revenue) items like Trek Slash 8 27.5 - 2016 and Trek Conduit+ - 2016

      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_31
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: total_sales
        defaultSortIndexColumn: null
        defaultSortDirection: DESC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: buying_power
            renameTo: null
            size: 129
            wrapText: null
            displayFormat: null
          - originalName: customer_id
            renameTo: null
            size: 119
            wrapText: null
            displayFormat: null
          - originalName: list_price
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 265
            wrapText: null
            displayFormat: null
          - originalName: purchase_frequency
            renameTo: null
            size: 162
            wrapText: null
            displayFormat: null
          - originalName: purchase_recency
            renameTo: null
            size: 150
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_quantity
            renameTo: null
            size: 168
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 132
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: f109a1e1-3d1b-40ec-a896-e1c46ef18cb0 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: need to balance inventory of high volume selling items like-- Surly Ice Cream Truck Frameset - 2016 and Electra Cruiser 1 (24-Inch) - 2016-- and high profit (revenue) items like Trek Slash 8 27.5 - 2016 and Trek Conduit+ - 2016
  - cellType: SQL
    cellId: ebe39255-45b6-48dd-813f-e4245c988a51 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Top 15 Product Sales
    config:
      source: |-
        SELECT 
                oi.product_id,
                product_name,
                p.brand_id,
                SUM(quantity) as unit_sold,
                oi.list_price,
                discount,
                oi.list_price * (1 - discount) AS discounted_price,
                SUM(SUM((oi.list_price * (1 - discount))*quantity)) OVER (PARTITION BY oi.product_id)  AS total_sales_per_product
            FROM 
                order_items as oi
                JOIN products as p
                    ON oi.product_id = p.product_id
            GROUP BY oi.product_id,oi.list_price,discount
            ORDER BY 8 DESC, 5 DESC
            LIMIT 15;
            -- Insight: We observe same products have been sold with different discounted prices across the time frame. 
            -- Trek Slash 8 27.5 - 2016,Trek Conduit+ - 2016, Trek Fuel EX 8 29 - 2016 and Surly Straggler 650b - 2016 
            -- are all 2016 models which are more populater.
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_32
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: brand_id
            renameTo: null
            size: 100
            wrapText: null
            displayFormat: null
          - originalName: discount
            renameTo: null
            size: 98
            wrapText: null
            displayFormat: null
          - originalName: discounted_price
            renameTo: null
            size: 145
            wrapText: null
            displayFormat: null
          - originalName: list_price
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: month
            renameTo: null
            size: 92
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 165
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 46
            wrapText: null
            displayFormat: null
          - originalName: total_sales
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: total_sales_per_product
            renameTo: null
            size: 184
            wrapText: null
            displayFormat: null
          - originalName: unit_sold
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: year
            renameTo: null
            size: 75
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: a40b20fd-9e79-412c-a68f-714dee00f33c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: We observe same products have been sold with different discounted prices across the time frame.     -- Trek Slash 8 27.5 - 2016,Trek Conduit+ - 2016, Trek Fuel EX 8 29 - 2016 and Surly Straggler 650b - 2016     -- are all 2016 models which are more populater.
  - cellType: SQL
    cellId: 3824831a-737a-4b22-a22f-1f6156a9d934 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Top Profitable Bikes
    config:
      source: |
        /*
        Insight: 
        Surprisingly, our biggest profits come from expensive (Q3) and luxury bikes (outliers).

        Let's make these bikes our TOP PRIORITY and ensure we keep them well-stocked to maximize our profits!
        */

        WITH most_profitable AS(
            SELECT 
                oi.product_id,
                product_name,
                p.brand_id,
                SUM(quantity) as unit_sold,
                oi.list_price,
                discount,
                oi.list_price * (1 - discount) AS discounted_price,
                SUM(SUM((oi.list_price * (1 - discount))*quantity)) OVER (PARTITION BY oi.product_id)  AS total_sales_per_product
            FROM 
                order_items as oi
                JOIN products as p
                    ON oi.product_id = p.product_id
            GROUP BY oi.product_id,oi.list_price,discount
            ORDER BY 8 DESC, 5 DESC
            LIMIT 15)
            SELECT 
                product_name, 
                b.brand_name
            FROM most_profitable
            JOIN brands b
                ON b.brand_id = most_profitable.brand_id;
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_37
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: brand_name
            renameTo: null
            size: 120
            wrapText: null
            displayFormat: null
          - originalName: discount
            renameTo: null
            size: 98
            wrapText: null
            displayFormat: null
          - originalName: discounted_price
            renameTo: null
            size: 145
            wrapText: null
            displayFormat: null
          - originalName: list_price
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
          - originalName: product_id
            renameTo: null
            size: 111
            wrapText: null
            displayFormat: null
          - originalName: product_name
            renameTo: null
            size: 231
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
          - originalName: total_sales_per_product
            renameTo: null
            size: 184
            wrapText: null
            displayFormat: null
          - originalName: unit_sold
            renameTo: null
            size: 102
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: TEXT
    cellId: 1009b41c-b579-4abd-9932-e74767ba9ce3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: |-
                Surprisingly, our biggest profits come from expensive (Q3) and luxury bikes (outliers).
                Let's make these bikes our TOP PRIORITY and ensure we keep them well-stocked to maximize our profits!
  - cellType: BLOCK
    cellId: 5e6e37fe-fce5-4fd0-afe7-18f7181597b0 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: f8fa2716-0f7d-4878-adcb-65f26934ae50
        chartCellId: 69bfdac1-d301-43aa-bcaf-d7252b40b07c
        activeTab: display
      cells:
        - cellType: SQL
          cellId: f8fa2716-0f7d-4878-adcb-65f26934ae50
          cellLabel: Products Sold < 30
          config:
            source: |-
              -- Insight: There are 771 products which have been sold less than 30 units.
              with units_sold_less_30 as (
              SELECT 
                      oi.product_id,
                      product_name,
                      SUM(quantity) as unit_sold,
                      oi.list_price,
                      discount,
                      oi.list_price * (1 - discount) AS discounted_price,
                      SUM(SUM((oi.list_price * (1 - discount))*quantity)) OVER (PARTITION BY oi.product_id)  AS total_sales_per_product
                  FROM 
                      order_items as oi
                      JOIN products as p
                          ON oi.product_id = p.product_id
                  GROUP BY oi.product_id,oi.list_price,discount
                  HAVING SUM(quantity) < 30
                  ORDER BY 3 DESC
              )
              SELECT COUNT(*) as no_of_products_sold_less_30 FROM units_sold_less_30;
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_39
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: []
              columnProperties:
                - originalName: discount
                  renameTo: null
                  size: 98
                  wrapText: null
                  displayFormat: null
                - originalName: discounted_price
                  renameTo: null
                  size: 145
                  wrapText: null
                  displayFormat: null
                - originalName: list_price
                  renameTo: null
                  size: 102
                  wrapText: null
                  displayFormat: null
                - originalName: no_of_products_sold_less_30
                  renameTo: null
                  size: 213
                  wrapText: null
                  displayFormat: null
                - originalName: product_id
                  renameTo: null
                  size: 111
                  wrapText: null
                  displayFormat: null
                - originalName: product_name
                  renameTo: null
                  size: 324
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 46
                  wrapText: null
                  displayFormat: null
                - originalName: total_sales_per_product
                  renameTo: null
                  size: 184
                  wrapText: null
                  displayFormat: null
                - originalName: unit_sold
                  renameTo: null
                  size: 102
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 69bfdac1-d301-43aa-bcaf-d7252b40b07c
          cellLabel: Products Sold < 30
          config:
            height: null
            chartSpec:
              type: layered
              facet: {}
              layers:
                - id: edd074dd-56e3-4451-8f1d-2e55aef4b2bb
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: product_name
                  series:
                    - id: bcd35766-416b-4b02-afce-cfdf26fd9ca1
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - total_sales_per_product
                      colorOrder: ascending
                      color:
                        type: static
                        dataType: number
                        aggregate: sum
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: solid
                  dataFrame: dataframe_39
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 34a4a46b-8e86-417d-893c-5a6a36cd178a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: There are 771 products which have been sold less than 30 units.
  - cellType: BLOCK
    cellId: ac6c59c2-8d2c-498e-b714-11e72bb90d3f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 659a96b6-abb7-42e3-bedd-04a2aa74401b
        chartCellId: 9707cee7-63ec-4d8e-beb8-bd7e35e183a8
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 659a96b6-abb7-42e3-bedd-04a2aa74401b
          cellLabel: Top-Selling Products
          config:
            source: |-
              -- Insight: Clearly Electra Townie Original 7D EQ - 2016 is sold the highest with 54 units being sold!
              SELECT 
                      oi.product_id,
                      product_name,
                      SUM(quantity) as unit_sold,
                      oi.list_price,
                      discount,
                      oi.list_price * (1 - discount) AS discounted_price,
                      SUM(SUM((oi.list_price * (1 - discount))*quantity)) OVER (PARTITION BY oi.product_id)  AS total_sales_per_product
                  FROM 
                      order_items as oi
                      JOIN products as p
                          ON oi.product_id = p.product_id
                  GROUP BY oi.product_id,oi.list_price,discount
                  HAVING SUM(quantity) > 50
                  ORDER BY 3 DESC;
                  /*
                  Although most products sell under 30 units, some exceed 50 units. These higher-selling items are priced under $1,000. Despite their lower profitability, we should keep these popular items in stock to meet demand and drive sales!
                  */
            dataFrameCell: false
            dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
            resultVariableName: dataframe_38
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              defaultColumnWidth: null
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: null
              columnProperties:
                - originalName: discount
                  renameTo: null
                  size: 98
                  wrapText: null
                  displayFormat: null
                - originalName: discounted_price
                  renameTo: null
                  size: 145
                  wrapText: null
                  displayFormat: null
                - originalName: list_price
                  renameTo: null
                  size: 102
                  wrapText: null
                  displayFormat: null
                - originalName: product_id
                  renameTo: null
                  size: 111
                  wrapText: null
                  displayFormat: null
                - originalName: product_name
                  renameTo: null
                  size: 231
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 39
                  wrapText: null
                  displayFormat: null
                - originalName: total_sales_per_product
                  renameTo: null
                  size: 184
                  wrapText: null
                  displayFormat: null
                - originalName: unit_sold
                  renameTo: null
                  size: 102
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: 9707cee7-63ec-4d8e-beb8-bd7e35e183a8
          cellLabel: Top-Selling Products
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: cc3c7e9f-50d8-4f21-b349-83e67d8379b6
                  xAxis:
                    type: string
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    dataFrameColumn: product_name
                  series:
                    - id: f40df96f-b7f8-4ecb-96d0-cd9b3a9d635b
                      type: bar
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                        aggregate: sum
                      dataFrameColumns:
                        - unit_sold
                      colorOrder: ascending
                      color:
                        type: static
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      barWidth: 1
                      orientation: vertical
                      layout: stacked
                  dataFrame: dataframe_38
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: chart_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: TEXT
    cellId: 3750cfa2-e0e3-4afd-a305-a8991dc1293c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: paragraph
          children:
            - text: Clearly Electra Townie Original 7D EQ - 2016 is sold the highest with 54 units being sold!
        - type: paragraph
          children:
            - text: Although most products sell under 30 units, some exceed 50 units. These higher-selling items are priced under $1,000. Despite their lower profitability, we should keep these popular items in stock to meet demand and drive sales!
  - cellType: SQL
    cellId: b004d879-b4f6-4a85-8cfc-a5c17867bddf # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      source: ""
      dataFrameCell: false
      dataConnectionId: a5c9bbd9-9686-41bd-8df3-777e854751d1
      resultVariableName: dataframe_55
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        defaultColumnWidth: null
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties: []
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
appLayout:
  visibleMetadataFields:
    - AUTHOR
    - LAST_RUN
    - CATEGORIES
    - STATUS
    - TABLE_OF_CONTENTS
    - NAME
    - LAST_EDITED
    - DESCRIPTION
  fullWidth: true
  tabs:
    - name: Tab 1
      rows:
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 083c0d49-abd7-4fac-b707-85dfadaa300a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 174374f5-bc1c-455f-97de-9c23f19674fe
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 6635df84-1a5d-4347-b905-3c5d9b7f3b69
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 26e09131-da29-42fe-a930-13a26be006be
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0b68485b-82af-4c44-a914-d5ec2f22b4d5
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 1d55e34d-2c74-4fcd-85f5-39c2c00548c5
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 323621b2-15dd-4102-a015-3a7e282f287f
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 2787c019-5291-4d25-96ff-f60386c7fca8
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 79af523b-1c25-4423-a507-890222716f26
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 808d3eb6-7f5a-430a-82d8-3d34f931324d
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 9358884c-1f9b-4878-be40-0e0a9f40a056
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: fa078169-0cae-41f4-ac92-131ec82e616a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 7e692606-9c5f-46a1-a8a8-2bac4fbcc817
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 288e19a8-0038-4b0f-b09e-76c7514b0495
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 88a9e5e2-aed3-4169-943d-aee43a4f9c3b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 320988b3-9df3-49df-b1c3-75b084e07ac3
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 62f90625-9c87-4caa-9a5c-563de90f5f8c
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: b392e949-9bad-47d4-a2b9-f6084453a5db
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 2f742382-baed-4f91-8680-9bec9c1dfd76
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 83e836bf-0b11-408b-9c81-674a16306332
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 8994ebb8-8f42-4727-938b-cdbfe404e428
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: c99864de-7270-4841-9cd8-21b3f71bf1db
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 457c2688-f004-41b7-9466-36aa199f7a6f
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: e80f506d-1516-45e3-91a0-069b39857b9e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 815da57d-b628-455e-b169-8c7c8afc227d
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 1a133729-1269-45fc-9186-f5d1f626124c
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 4334196a-2e12-4df4-a00b-31f134145bc9
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f4b5f660-755b-413e-a658-4fe253f6958e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 27dd878a-867c-48d3-ab7e-0666433a592b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: b4c43ab0-b985-4f44-a62a-c31fefb2f572
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f7cc28fd-4689-413a-9de7-42c3cb801d98
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d5b13498-c519-4adb-8225-0409b170041f
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: e4a7abd5-562c-4038-b5c5-ade7b21c7f36
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 6ba73ddd-b267-44fe-a727-8c91d1c7fb4f
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0bf02e36-087c-40fe-a705-c03056dba8d1
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: fe103151-245a-482b-b3d7-3ac9bbc3a525
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d6912407-8aaa-4a2c-8b9e-89146a489619
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 99e5196e-5f58-4af0-ab3d-d12afd11b45a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 8b0bd3cf-3c99-4a55-875b-88047c483c31
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 946fb27d-f098-45b4-9ad1-49f83e0f8689
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a3e1034b-16e8-448d-a5cb-67d6e54283b4
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 843f94f9-f4e3-4889-8c78-7c4e43b3e9bd
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 8c9ade49-5f10-4085-8e24-f28e01279df2
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 9b7501ae-e4f6-449c-815f-53f6ba00d734
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 36c99535-046b-48c9-91f1-a85680875676
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d249db08-3da6-473d-b3af-15a5f5a3d2f1
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 987650a8-18fe-4ef8-8378-68f1332a4c1d
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d202fa5e-fd5c-4f46-8c33-760a4f9471cb
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 123c1014-2336-4fd6-9b5d-b32f2eb8011b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0d59f6d5-10af-4ff7-9e82-afc02b688821
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: beb11f80-f5f3-4667-8485-e78aac0aa997
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 6ce994a4-324a-43ff-857d-a92f9a36f4ea
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: b193a557-8611-4045-8e2d-343b95a6cc2d
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: de559b7a-1fb7-48cd-a2b9-e312895f88bc
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 15d37be4-3993-4f39-a13a-bbdd46b2a01e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f8af8ba2-fc0e-4d76-988c-d79482884b7a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0733032e-437a-42fb-9e01-fd48a99dea72
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0a259c95-58b8-4ad2-b132-478444e8c69b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: b6f0429e-68ac-4dfa-bf92-38c98e00f661
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f4820416-32e4-400a-b424-61687cbf7000
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 11b943b3-131e-4589-8b17-7df330137c1a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a3670d2b-631e-4efd-8a03-72aab764e108
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 29ef316b-aa02-49a5-9903-dd3e438cf969
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a8e1767a-b453-4310-9323-a455dfede2fe
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 6b1c47ca-1503-4703-8fd6-e033ba5d6b0e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a8caa8ac-dd13-406b-b1f8-6ac8f6579429
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d97e3623-9a90-4e11-8c3e-808002a028f0
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 5e0cd7e4-67e0-44e8-8c81-5e4a08bdaa12
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0157228b-fa5f-4585-9007-f3176d5458c2
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: dfbf9136-a11a-4ad3-a6f1-464506deea6c
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 3d799aad-42b9-4f55-a74b-393509a6c5ca
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 7c40c856-f6e8-48ad-9cae-651d92084d88
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: c43f8f29-74f2-4d5b-8c85-084824023aa6
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 59532e69-aa64-4303-bbe4-7b9ecb69be8b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a0922fa4-0980-4c27-889e-19de4af7e3a7
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a0014070-d655-4456-971d-04848ced7bbb
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 2387986e-315a-4ee0-8363-e1d0576ffea9
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: fa5c76fc-35f7-43f2-8736-8c89e33e04c3
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 85948959-5f65-41bd-ba79-977b61047c07
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0d3ce302-e43d-4b29-be17-2fb965e231f8
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 75b45381-41b1-43ca-99bb-a7045b6031a9
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 813891c0-37fa-400c-9c1f-91a751349f3b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a94e6b08-98cd-4824-8958-d5d1f6b22353
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: c2ac8452-96d8-44a9-abd0-fc98c94c2fc3
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 0e3b8a71-5d12-4d4f-b579-6c480621dc3b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: aafd9561-c5e5-4909-b57b-9ce8725a4c39
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 64ab591e-ee98-4b7e-8fee-eb7f60c8fb10
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f109a1e1-3d1b-40ec-a896-e1c46ef18cb0
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: ebe39255-45b6-48dd-813f-e4245c988a51
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: a40b20fd-9e79-412c-a68f-714dee00f33c
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 3824831a-737a-4b22-a22f-1f6156a9d934
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 1009b41c-b579-4abd-9932-e74767ba9ce3
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: f8fa2716-0f7d-4878-adcb-65f26934ae50
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 34a4a46b-8e86-417d-893c-5a6a36cd178a
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 659a96b6-abb7-42e3-bedd-04a2aa74401b
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 3750cfa2-e0e3-4afd-a305-a8991dc1293c
                  sharedFilterId: null
                  height: null
                  showLabel: true
sharedFilters: []
